on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: eu-west-2
  PYTHON_VERSION: 3
  TERRAFORM_VERSION: 1.11.0
  TERRAGRUNT_VERSION: 0.78.1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-tflint@main

      - run: GOBIN=/usr/local/bin/ go install github.com/terraform-docs/terraform-docs@v0.20.0

      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-ssh@main
        with:
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: ${{ env.TERRAGRUNT_VERSION }}

      - uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: ${{ env.TERRAFORM_VERSION }}

      - run: terragrunt init --all
        env:
          DISABLE_INIT: true

      - run: pip install pre-commit

      - run: pre-commit run --all-files --show-diff-on-failure

  plan-development:
    # needs: lint
    environment: development
    env:
      TF_VAR_backups_basic_auth: ${{ secrets.BACKUPS_BASIC_AUTH }}
      TF_VAR_circleci_organisation_id: ${{ secrets.CIRCLECI_ORGANISATION_ID }}
      TF_VAR_commodi_tea_cookie_signing_secret: ${{ secrets.COMMODI_TEA_COOKIE_SIGNING_SECRET }}
      TF_VAR_commodi_tea_fpo_search_api_key: ${{ secrets.COMMODI_TEA_FPO_SEARCH_API_KEY }}
      TF_VAR_fpo_search_sentry_dsn: ${{ secrets.FPO_SEARCH_SENTRY_DSN }}
      TF_VAR_fpo_search_training_pem: ${{ secrets.FPO_SEARCH_TRAINING_PEM }}
      TF_VAR_slack_notify_lambda_slack_webhook_url: ${{ secrets.SLACK_NOTIFY_LAMBDA_SLACK_WEBHOOK_URL }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-Terraform-Role
          aws-region: ${{ env.AWS_REGION }}

      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-ssh@main
        with:
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: ${{ env.TERRAGRUNT_VERSION }}

      - uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: ${{ env.TERRAFORM_VERSION }}

      - run: terragrunt init --all
        working-directory: environments/development

      - run: terragrunt plan --all
        working-directory: environments/development

  apply-development:
    needs: plan-development
    environment: development
    env:
      TF_VAR_backups_basic_auth: ${{ secrets.BACKUPS_BASIC_AUTH }}
      TF_VAR_circleci_organisation_id: ${{ secrets.CIRCLECI_ORGANISATION_ID }}
      TF_VAR_commodi_tea_cookie_signing_secret: ${{ secrets.COMMODI_TEA_COOKIE_SIGNING_SECRET }}
      TF_VAR_commodi_tea_fpo_search_api_key: ${{ secrets.COMMODI_TEA_FPO_SEARCH_API_KEY }}
      TF_VAR_fpo_search_sentry_dsn: ${{ secrets.FPO_SEARCH_SENTRY_DSN }}
      TF_VAR_fpo_search_training_pem: ${{ secrets.FPO_SEARCH_TRAINING_PEM }}
      TF_VAR_slack_notify_lambda_slack_webhook_url: ${{ secrets.SLACK_NOTIFY_LAMBDA_SLACK_WEBHOOK_URL }}
      TERRAGRUNT_NON_INTERACTIVE: true
      TF_INPUT: false
      TF_IN_AUTOMATION: 1

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-Terraform-Role
          aws-region: ${{ env.AWS_REGION }}

      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-ssh@main
        with:
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: ${{ env.TERRAGRUNT_VERSION }}

      - uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: ${{ env.TERRAFORM_VERSION }}

      - run: terragrunt init --all
        working-directory: environments/development

      - run: terragrunt apply --all
        name: apply-all-base
        working-directory: environments/development/base

      - run: terragrunt apply --all
        name: apply-all-applications
        working-directory: environments/development/applications

      - run: terragrunt apply --all
        name: apply-all-common
        working-directory: environments/development/common

  post-apply-development:
    needs: apply-development
    uses: trade-tariff/trade-tariff-tools/.github/workflows/e2e-tests.yml@main
    with:
      test-url: "https://dev.trade-tariff.service.gov.uk"
      admin-test-url: "https://admin.dev.trade-tariff.service.gov.uk"
    secrets:
      basic_password: ${{ secrets.BASIC_PASSWORD }}

  notifications:
      runs-on: ubuntu-latest
      needs: post-apply-development
      if: always()
      steps:
        - uses: actions/checkout@v4
        - uses: trade-tariff/trade-tariff-tools/.github/actions/slack-notify@main
          with:
            result: ${{ needs.post-apply-development.result }}
            slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
        - run: if [[ "${{ needs.post-apply-development.result }}" != "success" ]]; then exit 1; fi

  plan-staging:
    environment: staging
    env:
      TF_VAR_backups_basic_auth: ${{ secrets.BACKUPS_BASIC_AUTH }}
      TF_VAR_circleci_organisation_id: ${{ secrets.CIRCLECI_ORGANISATION_ID }}
      TF_VAR_commodi_tea_cookie_signing_secret: ${{ secrets.COMMODI_TEA_COOKIE_SIGNING_SECRET }}
      TF_VAR_commodi_tea_fpo_search_api_key: ${{ secrets.COMMODI_TEA_FPO_SEARCH_API_KEY }}
      TF_VAR_fpo_search_sentry_dsn: ${{ secrets.FPO_SEARCH_SENTRY_DSN }}
      TF_VAR_slack_notify_lambda_slack_webhook_url: ${{ secrets.SLACK_NOTIFY_LAMBDA_SLACK_WEBHOOK_URL }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::451934005581:role/GithubActions-Terraform-Role
          aws-region: ${{ env.AWS_REGION }}

      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-ssh@main
        with:
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: ${{ env.TERRAGRUNT_VERSION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - run: terragrunt init --all
        working-directory: environments/staging

      - run: terragrunt plan --all
        working-directory: environments/staging

  plan-production:
    environment: production
    env:
      TF_VAR_backups_basic_auth: ${{ secrets.BACKUPS_BASIC_AUTH }}
      TF_VAR_circleci_organisation_id: ${{ secrets.CIRCLECI_ORGANISATION_ID }}
      TF_VAR_commodi_tea_cookie_signing_secret: ${{ secrets.COMMODI_TEA_COOKIE_SIGNING_SECRET }}
      TF_VAR_commodi_tea_fpo_search_api_key: ${{ secrets.COMMODI_TEA_FPO_SEARCH_API_KEY }}
      TF_VAR_fpo_search_sentry_dsn: ${{ secrets.FPO_SEARCH_SENTRY_DSN }}
      TF_VAR_slack_notify_lambda_slack_webhook_url: ${{ secrets.SLACK_NOTIFY_LAMBDA_SLACK_WEBHOOK_URL }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::382373577178:role/GithubActions-Terraform-Role
          aws-region: ${{ env.AWS_REGION }}

      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-ssh@main
        with:
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: ${{ env.TERRAGRUNT_VERSION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - run: terragrunt init --all
        working-directory: environments/production

      - run: terragrunt plan --all
        working-directory: environments/production
