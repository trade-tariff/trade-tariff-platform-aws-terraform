version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.2

deploy-feature-branches: &ignore-main
  filters:
    branches:
      ignore: [main]

only-main: &only-main
  filters:
    branches:
      only: [main]

executors:
  default:
    docker:
      - image: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-terraform-production:latest
    resource_class: small
    working_directory: "/tmp/terraform"
    environment:
      TF_INPUT: 0
      TF_IN_AUTOMATION: 1
      TERRAGRUNT_VERSION: "0.73.0"
      TG_NON_INTERACTIVE: true

jobs:
  terraform-fmt-validate:
    executor: default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: $AWS_ROLE_ARN
          region: $AWS_DEFAULT_REGION
      - run: terraform fmt
      - run: terragrunt hclfmt
      - run:
          name: Terraform validate
          command: |
            cd environments/<< parameters.environment >>
            terragrunt run-all validate

  terragrunt-plan:
    executor: default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: $AWS_ROLE_ARN
          region: $AWS_DEFAULT_REGION
      - run:
          name: Terraform Plan
          command: |
            cd environments/<< parameters.environment >>
            terragrunt run-all plan

  terragrunt-apply:
    executor: default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: $AWS_ROLE_ARN
          region: $AWS_DEFAULT_REGION
      - run:
          name: Terraform apply base
          command: |
            cd environments/<< parameters.environment >>/base
            terragrunt run-all apply

      - run:
          name: Terraform apply applications
          command: |
            cd environments/<< parameters.environment >>/applications
            terragrunt run-all apply

      - run:
          name: Terraform apply common
          command: |
            cd environments/<< parameters.environment >>/common
            terragrunt run-all apply

      - run:
          name: Terraform apply extra regions
          command: |
            if [ -d environments/<< parameters.environment >>/extra-regions ]; then
              cd environments/<< parameters.environment >>/extra-regions
              terragrunt run-all apply
            fi

workflows:
  version: 2
  development:
    jobs:
      - terraform-fmt-validate:
          name: terraform-fmt-development
          <<: *ignore-main
          environment: development
          context: trade-tariff-terraform-aws-development

      - terragrunt-plan:
          name: terragrunt-plan-development
          <<: *ignore-main
          requires:
            - terraform-fmt-development
          environment: development
          context: trade-tariff-terraform-aws-development

      - terragrunt-apply:
          name: terragrunt-apply-development-feature
          <<: *ignore-main
          requires:
            - terragrunt-plan-development
          environment: development
          context: trade-tariff-terraform-aws-development

      - terragrunt-apply:
          name: terragrunt-apply-development
          <<: *only-main
          environment: development
          context: trade-tariff-terraform-aws-development

  staging:
    jobs:
      - terraform-fmt-validate:
          name: terraform-fmt-staging
          <<: *ignore-main
          environment: staging
          context: trade-tariff-terraform-aws-staging

      - terragrunt-plan:
          name: terragrunt-plan-staging
          <<: *ignore-main
          requires:
            - terraform-fmt-staging
          environment: staging
          context: trade-tariff-terraform-aws-staging

      - terragrunt-apply:
          name: terragrunt-apply-staging
          <<: *only-main
          environment: staging
          context: trade-tariff-terraform-aws-staging

  production:
    jobs:
      - terraform-fmt-validate:
          name: terraform-fmt-production
          <<: *ignore-main
          environment: production
          context: trade-tariff-terraform-aws-production

      - terragrunt-plan:
          name: terragrunt-plan-production
          <<: *ignore-main
          requires:
            - terraform-fmt-production
          environment: production
          context: trade-tariff-terraform-aws-production

      - promote-to-production?:
          type: approval
          <<: *only-main

      - terragrunt-apply:
          name: terragrunt-apply-production
          <<: *only-main
          requires:
            - promote-to-production?
          environment: production
          context: trade-tariff-terraform-aws-production
