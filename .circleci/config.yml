version: 2.1

deploy-feature-branches: &ignore-main
  filters:
    branches:
      ignore: [main]

only-main: &only-main
  filters:
    branches:
      only: [main]

executors:
  default:
    docker:
      - image: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-terraform-1.5.5-python3-production:latest
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    resource_class: small
    working_directory: "/tmp/terraform"
    environment:
      TF_INPUT: 0
      TF_IN_AUTOMATION: 1
      TERRAGRUNT_VERSION: "0.50.15"

commands:
  install-terragrunt:
    description: Install Terragrunt
    steps:
      - run:
          name: Download Terragrunt
          command: |
            wget "https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64" \
              -O /usr/local/bin/terragrunt
      - run:
          name: Make Terragrunt executable
          command: chmod u+x /usr/local/bin/terragrunt

jobs:
  terraform-fmt-validate:
    executor: default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - install-terragrunt
      - run: terraform fmt
      - run: terragrunt hclfmt
      - run: |
          cd environments/<< parameters.environment >>
          terragrunt run-all validate --terragrunt-non-interactive

  terragrunt-plan:
    executor: default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - install-terragrunt
      - run:
          name: Terraform Plan
          command: |
            cd environments/<< parameters.environment >>
            terragrunt run-all plan --terragrunt-non-interactive

  terragrunt-apply:
    executor: default
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - install-terragrunt
      - run:
          name: Terraform apply base
          command: |
            cd environments/<< parameters.environment >>/base
            terragrunt run-all apply --terragrunt-non-interactive

      - run:
          name: Terraform apply applications
          command: |
            cd environments/<< parameters.environment >>/applications
            terragrunt run-all apply --terragrunt-non-interactive

      - run:
          name: Terraform apply common
          command: |
            cd environments/<< parameters.environment >>/common
            terragrunt run-all apply --terragrunt-non-interactive

workflows:
  version: 2
  deploy-to-development:
    jobs:
      - terraform-fmt-validate:
          name: terraform-fmt-development
          <<: *ignore-main
          environment: development
          context: trade-tariff-terraform-aws-development

      - terragrunt-plan:
          name: terragrunt-plan-development
          <<: *ignore-main
          requires:
            - terraform-fmt-development
          environment: development
          context: trade-tariff-terraform-aws-development

      - terragrunt-apply:
          name: terragrunt-apply-development-feature
          <<: *ignore-main
          requires:
            - terragrunt-plan-development
          environment: development
          context: trade-tariff-terraform-aws-development

      - terragrunt-apply:
          name: terragrunt-apply-development
          <<: *only-main
          environment: development
          context: trade-tariff-terraform-aws-development

  deploy-to-staging:
    jobs:
      - terraform-fmt-validate:
          name: terraform-fmt-staging
          <<: *ignore-main
          environment: staging
          context: trade-tariff-terraform-aws-staging

      - terragrunt-plan:
          name: terragrunt-plan-staging
          <<: *ignore-main
          requires:
            - terraform-fmt-staging
          environment: staging
          context: trade-tariff-terraform-aws-staging

      - terragrunt-apply:
          name: terragrunt-apply-staging
          <<: *only-main
          environment: staging
          context: trade-tariff-terraform-aws-staging

  deploy-to-production:
    jobs:
      - terraform-fmt-validate:
          name: terraform-fmt-production
          <<: *ignore-main
          environment: production
          context: trade-tariff-terraform-aws-production

      - terragrunt-plan:
          name: terragrunt-plan-production
          <<: *ignore-main
          requires:
            - terraform-fmt-production
          environment: production
          context: trade-tariff-terraform-aws-production

      - promote-to-production?:
          type: approval
          <<: *only-main

      - terragrunt-apply:
          name: terragrunt-apply-production
          <<: *only-main
          requires:
            - promote-to-production?
          environment: production
          context: trade-tariff-terraform-aws-production
